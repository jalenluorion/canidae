{"version":3,"file":"static/js/196.0b6f0e7b.chunk.js","mappings":"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","sources":["StudySpace/ControlView/Control.js","StudySpace/Controls.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown, faChevronUp, faUser, faExpand, faCompress } from '@fortawesome/free-solid-svg-icons'; // Import the new icons\nimport { useNavigate } from 'react-router-dom';\nimport './Control.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nfunction ControlContainer({\n    space,\n    viewOptions,\n    showUserView,\n    setShowUserView,\n    showFarLeftView,\n    setShowFarLeftView,\n    showLeft1View,\n    setShowLeft1View,\n    showLeft2View,\n    setShowLeft2View,\n    showTopView,\n    setShowTopView,\n    showRight1View,\n    setShowRight1View,\n    showRight2View,\n    setShowRight2View,\n    showFarRightView,\n    setShowFarRightView,\n}) {\n    const [isFullScreen, setIsFullScreen] = useState(false);\n    const [buttonRowDisplayed, setButtonRowDisplayed] = useState(true);\n    const navigate = useNavigate();\n\n    const toggleFullScreen = () => {\n        if (!isFullScreen) {\n            // Request fullscreen\n            if (document.documentElement.requestFullscreen) {\n                document.documentElement.requestFullscreen();\n            } else if (document.documentElement.mozRequestFullScreen) { // Firefox\n                document.documentElement.mozRequestFullScreen();\n            } else if (document.documentElement.webkitRequestFullscreen) { // Chrome, Safari, and Opera\n                document.documentElement.webkitRequestFullscreen();\n            } else if (document.documentElement.msRequestFullscreen) { // IE/Edge\n                document.documentElement.msRequestFullscreen();\n            }\n        } else {\n            // Exit fullscreen\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.mozCancelFullScreen) { // Firefox\n                document.mozCancelFullScreen();\n            } else if (document.webkitExitFullscreen) { // Chrome, Safari, and Opera\n                document.webkitExitFullscreen();\n            } else if (document.msExitFullscreen) { // IE/Edge\n                document.msExitFullscreen();\n            }\n        }\n    };\n\n    // Listen for changes in fullscreen state\n    useEffect(() => {\n        const fullscreenChangeHandler = () => {\n            setIsFullScreen(!!document.fullscreenElement);\n        };\n\n        document.addEventListener('fullscreenchange', fullscreenChangeHandler);\n        document.addEventListener('mozfullscreenchange', fullscreenChangeHandler);\n        document.addEventListener('webkitfullscreenchange', fullscreenChangeHandler);\n        document.addEventListener('msfullscreenchange', fullscreenChangeHandler);\n\n        return () => {\n            // Clean up event listeners\n            document.removeEventListener('fullscreenchange', fullscreenChangeHandler);\n            document.removeEventListener('mozfullscreenchange', fullscreenChangeHandler);\n            document.removeEventListener('webkitfullscreenchange', fullscreenChangeHandler);\n            document.removeEventListener('msfullscreenchange', fullscreenChangeHandler);\n        };\n    }, []);\n\n    // eslint-disable-next-line\n    const handleFarLeftViewClick = () => {\n        setShowFarLeftView(!showFarLeftView);\n    };\n\n    const handleButtonBarClick = () => {\n        setButtonRowDisplayed(!buttonRowDisplayed);\n    };\n\n    const handleLeft1ViewClick = () => {\n        setShowLeft1View(!showLeft1View);\n        if (showLeft2View) setShowLeft2View(false); // Close the other picker\n    };\n\n    const handleRight1ViewClick = () => {\n        setShowRight1View(!showRight1View);\n        if (showRight2View) setShowRight2View(false); // Close the other picker\n    };\n\n    const handleLeft2ViewClick = () => {\n        setShowLeft2View(!showLeft2View);\n        if (showLeft1View) setShowLeft1View(false); // Close the other picker\n    };\n\n    const handleRight2ViewClick = () => {\n        setShowRight2View(!showRight2View);\n        if (showRight1View) setShowRight1View(false); // Close the other picker\n    };\n\n    const handleTopViewClick = () => {\n        setShowTopView(!showTopView);\n    };\n\n    const handleFarRightViewClick = () => {\n        setShowFarRightView(!showFarRightView);\n    };\n\n    const handleLoginButtonClick = () => {\n        if (space != null) {\n            setShowUserView(!showUserView);\n        } else {\n            navigate(\"login\", {state: {button: true, visible: true}})\n        }\n    }\n\n    return (\n        <div className=\"control-container\">\n            <div className=\"control-title\">\n                <button className=\"\">\n                    <i className=\"bi bi-grid-fill\"></i>\n                </button>\n                <button className=\"\" onClick={handleLoginButtonClick}>\n                    <FontAwesomeIcon icon={faUser} fixedWidth />\n                </button>\n                <h1>{space == null ? \"Virtual Study Space\" : space.name}</h1>\n                <button className=\"\" onClick={handleButtonBarClick}>\n                    <FontAwesomeIcon icon={buttonRowDisplayed ? faChevronDown : faChevronUp} fixedWidth />\n                </button>\n                <button className=\"\" onClick={toggleFullScreen}>\n                    <FontAwesomeIcon icon={isFullScreen ? faCompress : faExpand} fixedWidth />\n                </button>\n            </div>\n            <div className={`button-row ${buttonRowDisplayed ? '' : 'button-row-hidden'}`}>\n                <button className=\"control-button button4\">\n                    <FontAwesomeIcon icon={viewOptions.farLeftView.icon} />\n                    <span className=\"button-label\">{viewOptions.farLeftView.label}</span>\n                </button>\n                <div className=\"view-picker\">\n                    <button className={`control-button button1 ${showLeft1View ? 'active' : ''}`} onClick={handleLeft1ViewClick}>\n                        <FontAwesomeIcon icon={viewOptions.left1View.icon} />\n                        <span className=\"button-label\">{viewOptions.left1View.label}</span>\n                    </button>\n                    <button className={`control-button button1 ${showLeft2View ? 'active' : ''}`} onClick={handleLeft2ViewClick}>\n                        <FontAwesomeIcon icon={viewOptions.left2View.icon} />\n                        <span className=\"button-label\">{viewOptions.left2View.label}</span>\n                    </button>\n                </div>\n                <button className={`control-button button3 ${showTopView ? 'active' : ''}`} onClick={handleTopViewClick}>\n                    <FontAwesomeIcon icon={viewOptions.topView.icon} />\n                    <span className=\"button-label\">{viewOptions.topView.label}</span>\n                </button>\n                <div className=\"view-picker\">\n                    <button className={`control-button button2 ${showRight1View ? 'active' : ''}`} onClick={handleRight1ViewClick}>\n                        <FontAwesomeIcon icon={viewOptions.right1View.icon} />\n                        <span className=\"button-label\">{viewOptions.right1View.label}</span>\n                    </button>\n                    <button className={`control-button button2 ${showRight2View ? 'active' : ''}`} onClick={handleRight2ViewClick}>\n                        <FontAwesomeIcon icon={viewOptions.right2View.icon} />\n                        <span className=\"button-label\">{viewOptions.right2View.label}</span>\n                    </button>\n                </div>\n                <button className={`control-button button5 ${showFarRightView ? 'active' : ''}`} onClick={handleFarRightViewClick}>\n                    <FontAwesomeIcon icon={viewOptions.farRightView.icon} />\n                    <span className=\"button-label\">{viewOptions.farRightView.label}</span>\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default ControlContainer;\n","import React, { useState } from 'react';\nimport ControlContainer from './ControlView/Control';\nimport { Outlet, Await } from 'react-router-dom';\n\nfunction Controls({\n    loggedIn,\n    data,\n    selectedBackground,\n    setSelectedBackground,\n    selectedAudio,\n    setSelectedAudio,\n    audioReady,\n}) {\n    const [showUserView, setShowUserView] = useState(false);\n\n    const [showLeft1View, setShowLeft1View] = useState(false);\n    const [showLeft2View, setShowLeft2View] = useState(false);\n    const [showTopView, setShowTopView] = useState(false);\n    const [showRight1View, setShowRight1View] = useState(false);\n    const [showRight2View, setShowRight2View] = useState(false);\n    const [showFarRightView, setShowFarRightView] = useState(false);\n\n    const [activeTab, setActiveTab] = useState('backgrounds');\n    \n    return (\n        <>\n            <div className=\"item-container\">\n                <Await\n                    resolve={data.toDo}\n                    errorElement={\n                        <p>Error loading package location!</p>\n                    }\n                >\n                    <div className=\"left-view\">\n                        <data.viewOptions.left1View.component visible={showLeft1View} />\n                        <data.viewOptions.left2View.component visible={showLeft2View} />\n                    </div>\n                </Await>\n                    <div className=\"top-view\">\n                        <data.viewOptions.topView.component visible={showTopView} />\n                    </div>\n                    <div className=\"control-view\">\n                        <ControlContainer\n                            space={data.space}\n                            viewOptions={data.viewOptions}\n                            showUserView={showUserView}\n                            setShowUserView={setShowUserView}\n                            showLeft1View={showLeft1View}\n                            setShowLeft1View={setShowLeft1View}\n                            showRight1View={showRight1View}\n                            setShowRight1View={setShowRight1View}\n                            showLeft2View={showLeft2View}\n                            setShowLeft2View={setShowLeft2View}\n                            showRight2View={showRight2View}\n                            setShowRight2View={setShowRight2View}\n                            showTopView={showTopView}\n                            setShowTopView={setShowTopView}\n                            showFarRightView={showFarRightView}\n                            setShowFarRightView={setShowFarRightView}\n                        />\n                    </div>\n                <Await\n                    resolve={data.notes}\n                    errorElement={\n                        <p>Error loading package location!</p>\n                    }\n                >\n                    <div className=\"right-view\">\n                        <data.viewOptions.right1View.component visible={showRight1View} />\n                        <data.viewOptions.right2View.component visible={showRight2View} />\n                    </div>\n                </Await>\n            </div>\n            <data.viewOptions.farRightView.component\n                visible={showFarRightView}\n                setVisible={setShowFarRightView}\n                mediaOptions={data.mediaOptions}\n                selectedBackground={selectedBackground}\n                setSelectedBackground={setSelectedBackground}\n                selectedAudio={selectedAudio}\n                setSelectedAudio={setSelectedAudio}\n                audioReady={audioReady}\n                activeTab={activeTab}\n                setActiveTab={setActiveTab}\n            />\n            <data.viewOptions.userView.component\n                visible={showUserView}\n                setVisible={setShowUserView}\n                user={data.user}\n            />\n            <Outlet />\n        </>\n    )\n}\n\nexport default Controls;"],"names":["_ref","space","viewOptions","showUserView","setShowUserView","showFarLeftView","setShowFarLeftView","showLeft1View","setShowLeft1View","showLeft2View","setShowLeft2View","showTopView","setShowTopView","showRight1View","setShowRight1View","showRight2View","setShowRight2View","showFarRightView","setShowFarRightView","isFullScreen","setIsFullScreen","useState","buttonRowDisplayed","setButtonRowDisplayed","navigate","useNavigate","useEffect","fullscreenChangeHandler","document","fullscreenElement","addEventListener","removeEventListener","_jsxs","className","children","_jsx","onClick","handleLoginButtonClick","state","button","visible","FontAwesomeIcon","icon","faUser","fixedWidth","name","handleButtonBarClick","faChevronDown","faChevronUp","toggleFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","faCompress","faExpand","concat","farLeftView","label","handleLeft1ViewClick","left1View","handleLeft2ViewClick","left2View","handleTopViewClick","topView","handleRight1ViewClick","right1View","handleRight2ViewClick","right2View","handleFarRightViewClick","farRightView","loggedIn","data","selectedBackground","setSelectedBackground","selectedAudio","setSelectedAudio","audioReady","activeTab","setActiveTab","_Fragment","Await","resolve","toDo","errorElement","component","ControlContainer","notes","setVisible","mediaOptions","userView","user","Outlet"],"sourceRoot":""}