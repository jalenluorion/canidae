{"version":3,"file":"static/js/196.83fc4aa7.chunk.js","mappings":"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","sources":["StudySpace/ControlView/Control.js","StudySpace/Controls.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown, faChevronUp, faUser, faExpand, faCompress, faList } from '@fortawesome/free-solid-svg-icons'; // Import the new icons\nimport { useNavigate } from 'react-router-dom';\nimport './Control.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nfunction ControlContainer({\n    user,\n    views,\n    showUserView,\n    setShowUserView,\n    showFarLeftView,\n    setShowFarLeftView,\n    showLeft1View,\n    setShowLeft1View,\n    showLeft2View,\n    setShowLeft2View,\n    showTopView,\n    setShowTopView,\n    showRight1View,\n    setShowRight1View,\n    showRight2View,\n    setShowRight2View,\n    showFarRightView,\n    setShowFarRightView,\n}) {\n    const [isFullScreen, setIsFullScreen] = useState(false);\n    const [buttonRowDisplayed, setButtonRowDisplayed] = useState(true);\n    const navigate = useNavigate();\n\n    const toggleFullScreen = () => {\n        if (!isFullScreen) {\n            // Request fullscreen\n            if (document.documentElement.requestFullscreen) {\n                document.documentElement.requestFullscreen();\n            } else if (document.documentElement.mozRequestFullScreen) { // Firefox\n                document.documentElement.mozRequestFullScreen();\n            } else if (document.documentElement.webkitRequestFullscreen) { // Chrome, Safari, and Opera\n                document.documentElement.webkitRequestFullscreen();\n            } else if (document.documentElement.msRequestFullscreen) { // IE/Edge\n                document.documentElement.msRequestFullscreen();\n            }\n        } else {\n            // Exit fullscreen\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.mozCancelFullScreen) { // Firefox\n                document.mozCancelFullScreen();\n            } else if (document.webkitExitFullscreen) { // Chrome, Safari, and Opera\n                document.webkitExitFullscreen();\n            } else if (document.msExitFullscreen) { // IE/Edge\n                document.msExitFullscreen();\n            }\n        }\n    };\n\n    // Listen for changes in fullscreen state\n    useEffect(() => {\n        const fullscreenChangeHandler = () => {\n            setIsFullScreen(!!document.fullscreenElement);\n        };\n\n        document.addEventListener('fullscreenchange', fullscreenChangeHandler);\n        document.addEventListener('mozfullscreenchange', fullscreenChangeHandler);\n        document.addEventListener('webkitfullscreenchange', fullscreenChangeHandler);\n        document.addEventListener('msfullscreenchange', fullscreenChangeHandler);\n\n        return () => {\n            // Clean up event listeners\n            document.removeEventListener('fullscreenchange', fullscreenChangeHandler);\n            document.removeEventListener('mozfullscreenchange', fullscreenChangeHandler);\n            document.removeEventListener('webkitfullscreenchange', fullscreenChangeHandler);\n            document.removeEventListener('msfullscreenchange', fullscreenChangeHandler);\n        };\n    }, []);\n\n    // eslint-disable-next-line\n    const handleFarLeftViewClick = () => {\n        setShowFarLeftView(!showFarLeftView);\n    };\n\n    const handleButtonBarClick = () => {\n        setButtonRowDisplayed(!buttonRowDisplayed);\n    };\n\n    const handleLeft1ViewClick = () => {\n        setShowLeft1View(!showLeft1View);\n        if (showLeft2View) setShowLeft2View(false); // Close the other picker\n    };\n\n    const handleRight1ViewClick = () => {\n        setShowRight1View(!showRight1View);\n        if (showRight2View) setShowRight2View(false); // Close the other picker\n    };\n\n    const handleLeft2ViewClick = () => {\n        setShowLeft2View(!showLeft2View);\n        if (showLeft1View) setShowLeft1View(false); // Close the other picker\n    };\n\n    const handleRight2ViewClick = () => {\n        setShowRight2View(!showRight2View);\n        if (showRight1View) setShowRight1View(false); // Close the other picker\n    };\n\n    const handleTopViewClick = () => {\n        setShowTopView(!showTopView);\n    };\n\n    const handleFarRightViewClick = () => {\n        setShowFarRightView(!showFarRightView);\n    };\n\n    const handleLoginButtonClick = () => {\n        if (user != null) {\n            setShowUserView(!showUserView);\n        } else {\n            navigate(\"login\", {state: {button: true, visible: true}})\n        }\n    }\n\n    return (\n        <div className=\"control-container\">\n            <div className=\"control-title\">\n                <button className=\"\">\n                    <i class=\"bi bi-grid-fill\"></i>\n                </button>\n                <button className=\"\" onClick={handleLoginButtonClick}>\n                    <FontAwesomeIcon icon={faUser} fixedWidth />\n                </button>\n                <h1>{user == null ? \"Virtual Study Space\" : user.name + '\\'s Space'}</h1>\n                <button className=\"\" onClick={handleButtonBarClick}>\n                    <FontAwesomeIcon icon={buttonRowDisplayed ? faChevronDown : faChevronUp} fixedWidth />\n                </button>\n                <button className=\"\" onClick={toggleFullScreen}>\n                    <FontAwesomeIcon icon={isFullScreen ? faCompress : faExpand} fixedWidth />\n                </button>\n            </div>\n            <div className={`button-row ${buttonRowDisplayed ? '' : 'button-row-hidden'}`}>\n                <button className=\"control-button button4\">\n                    <FontAwesomeIcon icon={views.farLeftView.icon} />\n                    <span className=\"button-label\">{views.farLeftView.label}</span>\n                </button>\n                <div className=\"view-picker\">\n                    <button className={`control-button button1 ${showLeft1View ? 'active' : ''}`} onClick={handleLeft1ViewClick}>\n                        <FontAwesomeIcon icon={views.left1View.icon} />\n                        <span className=\"button-label\">{views.left1View.label}</span>\n                    </button>\n                    <button className={`control-button button1 ${showLeft2View ? 'active' : ''}`} onClick={handleLeft2ViewClick}>\n                        <FontAwesomeIcon icon={views.left2View.icon} />\n                        <span className=\"button-label\">{views.left2View.label}</span>\n                    </button>\n                </div>\n                <button className={`control-button button3 ${showTopView ? 'active' : ''}`} onClick={handleTopViewClick}>\n                    <FontAwesomeIcon icon={views.topView.icon} />\n                    <span className=\"button-label\">{views.topView.label}</span>\n                </button>\n                <div className=\"view-picker\">\n                    <button className={`control-button button2 ${showRight1View ? 'active' : ''}`} onClick={handleRight1ViewClick}>\n                        <FontAwesomeIcon icon={views.right1View.icon} />\n                        <span className=\"button-label\">{views.right1View.label}</span>\n                    </button>\n                    <button className={`control-button button2 ${showRight2View ? 'active' : ''}`} onClick={handleRight2ViewClick}>\n                        <FontAwesomeIcon icon={views.right2View.icon} />\n                        <span className=\"button-label\">{views.right2View.label}</span>\n                    </button>\n                </div>\n                <button className={`control-button button5 ${showFarRightView ? 'active' : ''}`} onClick={handleFarRightViewClick}>\n                    <FontAwesomeIcon icon={views.farRightView.icon} />\n                    <span className=\"button-label\">{views.farRightView.label}</span>\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default ControlContainer;\n","import React, { useState } from 'react';\nimport ControlContainer from './ControlView/Control';\nimport { Outlet, Await } from 'react-router-dom';\n\nfunction Controls({\n    data,\n    options,\n    views,\n    selectedBackground,\n    setSelectedBackground,\n    selectedAudio,\n    setSelectedAudio,\n    audioReady,\n}) {\n    const [showUserView, setShowUserView] = useState(false);\n\n    const [showLeft1View, setShowLeft1View] = useState(false);\n    const [showLeft2View, setShowLeft2View] = useState(false);\n    const [showTopView, setShowTopView] = useState(false);\n    const [showRight1View, setShowRight1View] = useState(false);\n    const [showRight2View, setShowRight2View] = useState(false);\n    const [showFarRightView, setShowFarRightView] = useState(false);\n\n    const [activeTab, setActiveTab] = useState('backgrounds');\n    return (\n        <>\n            <div className=\"item-container\">\n                <Await\n                    resolve={data.toDo}\n                    errorElement={\n                        <p>Error loading package location!</p>\n                    }\n                >\n                    <div className=\"left-view\">\n                        <views.left1View.component visible={showLeft1View} />\n                        <views.left2View.component visible={showLeft2View} />\n                    </div>\n                </Await>\n                    <div className=\"top-view\">\n                        <views.topView.component visible={showTopView} />\n                    </div>\n                    <div className=\"control-view\">\n                        <ControlContainer\n                            user={data.user}\n                            views={views}\n                            showUserView={showUserView}\n                            setShowUserView={setShowUserView}\n                            showLeft1View={showLeft1View}\n                            setShowLeft1View={setShowLeft1View}\n                            showRight1View={showRight1View}\n                            setShowRight1View={setShowRight1View}\n                            showLeft2View={showLeft2View}\n                            setShowLeft2View={setShowLeft2View}\n                            showRight2View={showRight2View}\n                            setShowRight2View={setShowRight2View}\n                            showTopView={showTopView}\n                            setShowTopView={setShowTopView}\n                            showFarRightView={showFarRightView}\n                            setShowFarRightView={setShowFarRightView}\n                        />\n                    </div>\n                <Await\n                    resolve={data.notes}\n                    errorElement={\n                        <p>Error loading package location!</p>\n                    }\n                >\n                    <div className=\"right-view\">\n                        <views.right1View.component visible={showRight1View} />\n                        <views.right2View.component visible={showRight2View} />\n                    </div>\n                </Await>\n            </div>\n            <views.farRightView.component\n                visible={showFarRightView}\n                setVisible={setShowFarRightView}\n                options={options}\n                selectedBackground={selectedBackground}\n                setSelectedBackground={setSelectedBackground}\n                selectedAudio={selectedAudio}\n                setSelectedAudio={setSelectedAudio}\n                audioReady={audioReady}\n                activeTab={activeTab}\n                setActiveTab={setActiveTab}\n            />\n            <views.userView.component\n                visible={showUserView}\n                setVisible={setShowUserView}\n                user={data.user}\n            />\n            <Outlet />\n        </>\n    )\n}\n\nexport default Controls;"],"names":["_ref","user","views","showUserView","setShowUserView","showLeft1View","showFarLeftView","setShowFarLeftView","setShowLeft1View","showLeft2View","setShowLeft2View","showTopView","setShowTopView","showRight1View","setShowRight1View","showRight2View","setShowRight2View","showFarRightView","setShowFarRightView","_useState","useState","_useState2","_slicedToArray","isFullScreen","setIsFullScreen","_useState3","_useState4","buttonRowDisplayed","setButtonRowDisplayed","navigate","useNavigate","useEffect","fullscreenChangeHandler","document","fullscreenElement","addEventListener","removeEventListener","_jsxs","className","children","_jsx","class","onClick","state","button","visible","FontAwesomeIcon","icon","faUser","fixedWidth","name","faChevronDown","faChevronUp","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","faCompress","faExpand","concat","farLeftView","label","left1View","left2View","topView","right1View","right2View","farRightView","data","options","selectedBackground","setSelectedBackground","selectedAudio","setSelectedAudio","audioReady","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","activeTab","setActiveTab","_Fragment","Await","resolve","toDo","errorElement","component","ControlContainer","notes","setVisible","userView","Outlet"],"sourceRoot":""}